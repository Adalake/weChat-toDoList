"use strict";
var util = require("../../utils/util.js");
var app = getApp();
var context;
Page({
    data: {
        motto: "todolist version_1",
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse("button.open-type.getUserInfo"),
        addShow: false,
        addText: "",
        status: "1",
        focus: false,
        lists: [],
        curLists: [],
        books: [],
        editIndex: 0,
        delBtnWidth: 120,
        curDay: "",
        addUserInfo: "",
        studyStatus: 0,
        lastId: "",
    },
    studyDone: function () {
        var db = wx.cloud.database();
        console.log(2);
        if (context.data.studyStatus === 0) {
            context.setData({
                studyStatus: 1,
            });
            db.collection("todolist").add({
                data: {
                    done: true,
                    userId: "test userId in radio",
                    curDay: context.data.curDay,
                },
                success: function (res) {
                    context.setData({
                        lastId: res["_id"],
                    }),
                        wx.showToast({
                            title: "今日学习打卡",
                        });
                },
            });
        }
        else {
            wx.showModal({
                title: "删除今天的打卡",
                content: "您确定要删除今天的打卡吗？",
                confirmText: "确认删除",
                cancelText: "取消",
                success: function (res) {
                    if (res.confirm) {
                        db
                            .collection("todolist")
                            .doc(context.data.lastId)
                            .remove({
                            success: function () {
                                wx.showToast({
                                    title: "删除成功",
                                });
                            },
                        }),
                            context.setData({
                                studyStatus: 0,
                            });
                        console.log("用户确认删除");
                    }
                    else {
                        console.log("用户取消");
                    }
                },
            });
        }
    },
    bindViewTap: function () {
        wx.navigateTo({
            url: "../logs/logs",
        });
    },
    onLoad: function () {
        var _this = this;
        context = this;
        var db = wx.cloud.database();
        db.collection("books").get({
            success: function (res) {
                console.log(res, "sql");
                context.setData({
                    books: res.data,
                });
            },
        });
        var time = util.formatTime(new Date());
        var getDay = time.split(" ")[0];
        this.setData({
            curDay: getDay,
        });
        console.log(context.curDay, "today");
        wx.getStorage({
            key: "lists",
            success: function (res) {
                console.log(res.data);
                context.setData({
                    lists: res.data,
                    curLists: res.data,
                });
            },
        });
        if (app.globalData.userInfo) {
            this.setData({
                userInfo: app.globalData.userInfo,
                hasUserInfo: true,
            });
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = function (res) {
                _this.setData({
                    userInfo: res.userInfo,
                    hasUserInfo: true,
                });
            };
        }
        else {
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    _this.setData({
                        userInfo: res.userInfo,
                        hasUserInfo: true,
                    });
                },
            });
        }
    },
    getUserInfo: function (e) {
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true,
        });
    },
    addTodoShow: function () {
        var db = wx.cloud.database();
        db.collection("books").get({
            success: function (res) {
                console.log(res.data, "sql when add something");
                context.setData({
                    books: res.data,
                });
            },
        });
        context.setData({
            addShow: true,
            focus: true,
        });
    },
    addTodo: function () {
        if (!context.data.addText.trim()) {
            return;
        }
        var temp = context.data.lists;
        var addT = {
            id: new Date().getTime(),
            title: context.data.addText,
            status: "0",
        };
        temp.push(addT);
        context.showCur(temp);
        context.addTodoHide();
        wx.setStorage({
            key: "lists",
            data: temp,
        });
        wx.showToast({
            title: "添加成功! 23",
            icon: "success",
            duration: 1000,
        });
    },
    addTodoHide: function () {
        context.setData({
            addShow: false,
            focus: false,
            addText: "",
        });
    },
    showCur: function (data) {
        if (data.status === "1") {
            context.setData({
                lists: data,
                curLists: data,
            });
        }
        else {
            context.setData({
                lists: data,
                curLists: data.filter(function (item) { return +item.status === context.data.status - 2; }),
            });
        }
    },
    changeTodo: function (e) {
        var db = wx.cloud.database();
        var item = e.currentTarget.dataset.item;
        var temp = context.data.lists;
        temp.forEach(function (el) {
            if (el.id === item) {
                if (el.status === "0") {
                    db.collection("books").add({
                        data: {
                            name: "lake test",
                            author: "lake test",
                            price: 92,
                        },
                        success: function () {
                            wx.showToast({
                                title: "新增记录成功",
                            });
                            wx.navigateTo({
                                url: "../index/index",
                            });
                        },
                        fail: function () {
                            wx.showToast({
                                title: "新增失败",
                            });
                        },
                    });
                    el.status = "1";
                    context.showCur(temp);
                    wx.setStorage({
                        key: "lists",
                        data: temp,
                    });
                    wx.showToast({
                        title: "已完成任务",
                        icon: "success",
                        duration: 1000,
                    });
                }
                else {
                    wx.showModal({
                        title: "",
                        content: "该任务已完成，确定重新开始任务？",
                        confirmText: "确定",
                        cancelText: "不了",
                        success: function (res) {
                            if (res.confirm) {
                                el.status = "0";
                                context.showCur(temp);
                                wx.setStorage({
                                    key: "lists",
                                    data: temp,
                                });
                            }
                            else {
                                return console.log("不操作");
                            }
                        },
                    });
                }
            }
        });
        console.log(item);
    },
    setInput: function (e) {
        context.setData({
            addText: e.detail.value,
        });
    },
    setUser: function (e) {
        context.setData({
            addUserInfo: e.detail.value,
        });
    },
    addUser: function () {
        var db = wx.cloud.database();
        console.log(context.data.addUserInfo);
        if (context.data.addUserInfo === "test 2")
            db.collection("todolist").add({
                data: {
                    openid: context.data.addUserInfo,
                    done: true,
                    curDay: context.data.curDay,
                },
                success: function () {
                    wx.showToast({
                        title: "邀请码验证成功",
                    });
                },
            });
    },
    showStatus: function (e) {
        var st = e.currentTarget.dataset.status;
        if (context.data.status === st)
            return;
        if (st === "1") {
            context.setData({
                status: st,
                curLists: context.data.lists,
            });
            return;
        }
        context.setData({
            status: st,
            curLists: context.data.lists.filter(function (item) { return +item.status === st - 2; }),
        });
    },
    delTodo: function (e) {
        var item = e.currentTarget.dataset.item;
        var temp = context.data.lists;
        temp.forEach(function (el, index) {
            if (el.id === item) {
                temp[index].txtStyle = "left:0";
                wx.showModal({
                    title: "",
                    content: "您确定要删除吗？",
                    confirmText: "确定",
                    cancelText: "考虑一下",
                    success: function (res) {
                        if (res.confirm) {
                            temp.splice(index, 1);
                            context.showCur(temp);
                            wx.setStorage({
                                key: "lists",
                                data: temp,
                            });
                        }
                        else {
                            context.showCur(temp);
                            return console.log("不操作");
                        }
                    },
                });
            }
        });
    },
    touchS: function (e) {
        if (e.touches.length === 1) {
            context.setData({
                startX: e.touches[0].clientX,
            });
        }
    },
    touchM: function (e) {
        if (e.touches.length === 1) {
            var moveX = e.touches[0].clientX;
            var disX = context.data.startX - moveX;
            var delBtnWidth = context.data.delBtnWidth;
            var txtStyle = "";
            if (disX == 0 || disX < 0) {
                txtStyle = "left:0";
            }
            else if (disX > 0) {
                txtStyle = "left:-" + disX + "rpx";
                if (disX >= delBtnWidth) {
                    txtStyle = "left:-" + delBtnWidth + "rpx";
                }
            }
            var index = e.currentTarget.dataset.index;
            var list = context.data.curLists;
            list[index].txtStyle = txtStyle;
            context.setData({
                curLists: list,
            });
        }
    },
    touchE: function (e) {
        if (e.changedTouches.length === 1) {
            var endX = e.changedTouches[0].clientX;
            var disX = context.data.startX - endX;
            var delBtnWidth = context.data.delBtnWidth;
            var txtStyle = disX > delBtnWidth / 2 ? "left:-" + delBtnWidth + "rpx" : "left:0";
            var index = e.currentTarget.dataset.index;
            var list = context.data.curLists;
            list[index].txtStyle = txtStyle;
            context.setData({
                curLists: list,
            });
        }
    },
});
//# sourceMappingURL=data:application/json;base64,